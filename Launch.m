clear all; 
%% основной файл с входными данными
% wl.S            - массив длин волн сигнала, нм
% wl.ASE          - массив длин волн ASE, нм
% wl.PF           - массив длин волн попутной накачки, нм
% P_s_sum         - суммарная мощность сигнала, дБм
% P_in.S          - массив входных мощностей сигнала (суммарная мощность / кол-во длин волн), дБм
% P_in.PF         - массив мощностей попутной накачки в 0, дБм
% P_in.ASEF       - массив мощностей попутного ASE (на заданном массиве длин волн) в 0, дБм 
% P_in.ASEB       - массив мощностей встречной накачки в L, дБм
% P_in.PB         - массив мощностей встречного ASE (на заданном массиве длин волн) в L, дБм
%пустой массив, если накачка только попуная
% r_edf           - радиус сердцевины активного волокна, м
% NA              - числовая апертура активного волокна    
% n               - концентрация ионов эрбия, ppm
% L               - длина активного волокна, м
% T_c             - температура среды, °С
% low_gain_regime - механический выбор режима слабого сигнала (упрощенная система уравнений),
%0 - общий случай (без приближения), 1 - режим слабого сигнала

P_s_sum = -28;    % массив суммарных входных мощностей сигнала
                                
% параметры сигнала
wl.S                   = [1529.55 1532.52 1537.24 1541.96 1547.56 1552.36 1556.36 1560.44];      % длины волн сигнала, нм
P_in.S                 = dbm(undbm(P_s_sum) / length(wl.S)) * ones(1,length(wl.S));       % входные мощности сигнала, дБм

% параметры ASE 
wl.ASE                 = [1528 : 0.1 : 1565];                                             % спектр ASE, нм
P_in.ASEF              = dbm(zeros(size(wl.ASE)));                                        % массив мощностей попутного ASE (на заданном массиве длин волн) в 0, дБм
P_in.ASEB              = dbm(zeros(size(wl.ASE)));                                        % массив мощностей встречного ASE (на заданном массиве длин волн) в L, дБм

% параметры накачки
wl.PF                  = [1473 1480];                                                     % длины волн попутной накачки, нм
P_in.PF                = [13.85 15.89];                                                   % входные мощности попутной накачки, дБм
wl.PB                  = [1473 1480];                                                     % длины волн встречной накачки, нм
% (пустой массив, если накачка только попутная)
P_in.PB                = [];                                                              % входные мощности встречной накачки, дБм

% параметры активного волокна и системы
r_edf                  = 2.9E-6 / 2;                                                      % радиус сердцевины, м
NA                     = 0.28;                                                            % числовая апертура активного волокна
n                      = 80;                                                              % концентрация ионов эрбия, ppm
L                      = 9;                                                               % длина активного волокна, м
T_c                    = 25;                                                             % температура среды, °С
splices.wdm_p          = 0.15;                                                            % потери на wdm для накачки (datasheet), дБм                         
splices.wdm_s          = 0.2;                                                             % потери на wdm для чигнала (datasheet), дБм                  
splices.fiber          = 0.5;                                                             % потери на сварке
low_gain_regime        = 0;                                                               % механический выбор режима слабого сигнала
                                                                                          % 1 - режим слабого сигнала % 0 - общий случай
%% Основная расчетная функция
[G, nf, Pout]          = edfa_main(P_in, wl, n, low_gain_regime, L, T_c, r_edf, NA, splices);

% сглаживание результатов моделирования
% [wl_smooth.Model, G_smooth.Model, nf_smooth.Model] = smooth_res(wl.S, G, nf);   

% чтение экспериментальных данных
EXP                    = exp_res(P_s_sum, T_c, dbm(sum(undbm(P_in.PF))));
delta_G = G - EXP(2,:);
delta_nf = nf - EXP(3,:);

% [wl_smooth.Exp, G_smooth.Exp, nf_smooth.Exp]       = smooth_res(EXP(1,:), EXP(2,:), EXP(3,:));

%% оформление графиков
% create_graf(wl_smooth.Model, G_smooth.Model, "model", 'Gain', P_s_sum, 1, 2); 
% hold on;
% create_graf(wl_smooth.Exp, G_smooth.Exp, "exp", 'Gain', P_s_sum, 1, 2); 
% hold on;
% create_graf(wl_smooth.Model, nf_smooth.Model, "model", 'NF', P_s_sum, 2, 2); 
% hold on;
% create_graf(wl_smooth.Exp, nf_smooth.Exp, "exp", 'NF', P_s_sum, 2, 2); 
